plugins {
    id 'com.android.library'
    id 'maven-publish'
}



android {
    namespace 'com.example.achalasecure'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures{
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}


/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            //from components. // Use components.android for .aar publishing
            artifact("$buildDir/outputs/aar/achalasecure-release.aar")
            groupId = 'com.example.achalasecure'
            artifactId = 'achala-secure-library'
            version = '1.0.0'
        }
    }
    repositories {
        maven {
            name = 'SonatypeOSSRH'
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/") // Maven Central
            credentials {
                username = project.hasProperty("sonatypeUsername") ? project.sonatypeUsername : ""
                password = project.hasProperty("sonatypePassword") ? project.sonatypePassword : ""
            }
        }
    }
}
*/


afterEvaluate{
    publishing {
        publications {
            release(MavenPublication){
                //from components.release
                groupId = 'com.example.achalasecure'
                artifactId = 'achalasecure'
                version = '1.0'
            }
        }
    }
}


dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'





    // CameraX core library using the camera2 implementation
//    def camerax_version = "1.3.4"
    def camerax_version = "1.5.0-alpha03"
    //def camerax_version = "1.5.0-alpha03"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    api  "androidx.camera:camera-core:${camerax_version}"
    api  "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    api  "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    api  "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    api  "androidx.camera:camera-view:${camerax_version}"

    // If you want to additionally use the CameraX Extensions library
    api  "androidx.camera:camera-extensions:${camerax_version}"
    api  'com.google.mlkit:face-detection:16.1.7'
    api  'com.google.mlkit:object-detection:17.0.2'

//    // Import the BoM for the Firebase platform
//    implementation(platform("com.google.firebase:firebase-bom:33.5.0"))
//
//    // Add the dependency for the Firebase ML model downloader library
//    // When using the BoM, you don't specify versions in Firebase library dependencies
//    implementation("com.google.firebase:firebase-ml-modeldownloader")
//
//    // Also add the dependency for the TensorFlow Lite library and specify its version
//    implementation("org.tensorflow:tensorflow-lite:2.3.0")

    api  'org.tensorflow:tensorflow-lite:2.12.0'
    api  'org.tensorflow:tensorflow-lite-gpu:2.12.0'
    api  'org.tensorflow:tensorflow-lite-gpu-api:2.12.0'
    api  'org.tensorflow:tensorflow-lite-support:0.4.2'
    api  'com.google.code.gson:gson:2.11.0'


    api  'com.github.f0ris.sweetalert:library:1.5.1'

    //implementation 'org.opencv:opencv-android:4.5.3'
    api  'org.opencv:opencv:4.10.0'


}




